nick@ub18x-GB:~$ crontab -e
no crontab for nick - using an empty one

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.basic
  3. /usr/bin/mcedit
  4. /usr/bin/vim.tiny
  5. /usr/bin/the
  6. /bin/ed

Choose 1-6 [1]: 4
crontab: installing new crontab
nick@ub18x-GB:~$ sudo ls /var/spool/cron/crontabs/
nick
nick@ub18x-GB:~$ sudo cat /var/spool/cron/crontabs/nick
# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.Rt2Aln/crontab installed on Tue Apr 14 00:45:50 2020)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
  * *   1   *   *    for i in $(ls /home/); do date >>/home/$i/sizeprofile.txt && du -sh /home/$i >>/home/$i/sizeprofile.txt && echo >>/home/$i/sizeprofile.txt; done
nick@ub18x-GB:~$ 



Вт апр 14 00:57:35 MSK 2020
81M	/home/nick

Вт апр 14 00:57:44 MSK 2020
81M	/home/nick

nick@ub18x-GB:~$ 

